/*
										● CONSULTAS (QUERIES) - SELECT
										  ¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨
SELECT => Es un selector de Registros de una Tabla.
La sentencia SELECT permite realizar operaciones de selección, consulta, orden, agrupación y filtrado de registros. Es decir, se 
utiliza para seleccionar y/o consultar información almacenada en una o varias tablas.
El comando 'SELECT' por si solo no necesita una TABLA para ejecutarse, puede operar por si solo y puede servir para seleccionar datos, 
realizar operaciones,  etc y devolvera la información en una Tabla que generara como resultado.            

.Ejemplo: 

SELECT (1+1); 
SELECT (3.14 * 2);

.Sintaxis para realizar CONSULTAS: 

SELECT Campo FROM Tabla;  -- Se indican los campos de la Tabla que se desan consultar. 

Ejemplo: 

SELECT nombre FROM profesores; -- Selecciona de la Tabla 'profesores' todos los Resgistros de la Columna 'nombre' .

SELECT apellido, nombre FROM profesores; -- Selecciona de la Tabla 'profesores' las Columnas 'apellido' y 'nombre' con sus 
                                             registros correspondientes.
                                       
Para seleccionar todas las columnas se utiliza el  " * "(asterisco). La cláusula WHERE se utiliza para establecer un criterio de 
búsqueda o filtro.

SELECT * FROM Tabla

En este caso el * representa todas las Columnas de Tabla. Es decir consultara, todos los Registros de todos los Campos de la Tabla.

 
 ● 'AS':
El comando 'AS' sirve para establecer un 'Alias' a las operaciones que no estan asociadas una Columna o Table en particular. 

Ejemplo:
SELECT (1+1) AS resultado, 
SELECT (3.14 * 2) AS pi_2;

 


SELECT id, codigo, producto, precio, marcar, (precio * 1.21) AS Iva from Tabla AS otronombre;   

• IMPORTAR TABLAS DESDE ORÍGENES EXTERNOS
  ¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨
En muchas oportunidades se presenta el caso de que una empresa posee las tablas generadas en Microsoft Access o Microsoft Excel y 
debido a la cantidad de información que empiezan a contener esas tablas, se decide pasar las tablas a SQL para trabajarlas de una mejor manera.
MySQL Workbench permite la importación de tablas externas. El único problema que se presenta es que este motor de bases de datos sólo 
admite la importación de tablas que se hallen en archivos con formato CSV o JSON.
Dado que esas tablas no fueron generadas dentro de un entorno SQL, los campos no tendrán definidos tipos de datos ni modificadores. Al 
momento de llevar a cabo la importación de las tablas, se podrá definir el tipo de dato para cada uno de los campos. 

. MECANISMO DE IMPORTACIÓN:
Para importar tablas desde archivos con formato CSV o JSON:

1. Pulsa el clic derecho del mouse sobre el nombre de la base de datos en uso.
2. Selecciona la opción Table Data Import Wizard. 
3. Pulsa el botón Browse.
4. Ubica y abre el archivo que contiene la tabla a importar.
5. Pulsa el botón Next.
6. Especifica si quieres volcar los datos de la tabla importada en una tabla existente dentro de la base de datos, o selecciona la 
opción Create new table para crear una nueva tabla dentro de la base de datos. Puedes cambiar el nombre de la tabla, o mantener el 
nombre por defecto (el nombre del archivo). Pulsa Next.
7. En este paso, podrás especificar los tipos de dato para cada campo. Por defecto, MySQL Workbench asignará a cada campo (columna) un 
tipo de dato según los valores que encuentre en ellos. Estos tipos de datos asignados se pueden cambiar, seleccionándolos de las listas
desplegables.
8. Una vez definidos los tipos de datos para campo, pulsa Next.
9. En este paso, sólo se especifica que se llevará a cabo la importación de los datos desde el archivo de datos externo. Sólo bastará 
con pulsar Next para comenzar la importación.
10. Finalizado el proceso de importación, pulsa el botón Next para poder observar la pantalla final. En esta vista encontrarás el 
tiempo que tardó la importación de los datos, la confirmación de que la tabla fue creada dentro de la base de datos y la cantidad de 
registros importados desde el origen externo.
11. Pulsa Finish para concluir el asistente.
12. No olvides actualizar los esquemas para observar la tabla dentro de la base.


*/

package clase15;

public class SQL_parte2 {

}
